# algoritmos1

#include"stdafx.h"
#include"conio.h"
#include<iostream>
#include<string>
#define MAX 30
usingnamespacestd;

structMatriz
{int mat[20][20];
};

struct Vector
{intvec[20];
};

voidcargar_vector(floatvec[MAX],int n);
voidcargar_matriz(int M[10][10],intn,int m);
void cargar_Vecvec(Vector V[MAX], int n);
void cargar_matrizdematriz(Matriz M[10][10],int n);
void ordenar_fila_matriz(Matriz M[10][10],int n);

void main()
{intN,opcion,m,y[10][10];
float VEC[MAX];
Matriz M[10][10];
do
 {cout<<endl<<endl<<"******** MENU *********";
  cout<<endl<<"1.- Cargar vector: ";
  cout<<endl<<"2.- Cargar matriz: ";
  cout<<endl<<"3.- Cargar matriz de matrices: ";
  cout<<endl<<"4.- Ordenar matriz de forma ascendente: ";
  cout<<endl<<"5.- Salir: ";
  cout<<"elegir una opcion: ";
  cin>>opcion;
   switch (opcion)
    {case 1:
     cargar_vector(Vec,N);
     break;
     case 2:
     cargar_matriz(N,m);
     break;
     case 3:
     cargar_matrizdematriz(M,N);
     break;
     case 4:
     ordenar_fila_matriz(M,N);
     break;
   while(opcion!=5);
    }
  }
}

Void cargar_vector(floatvec[MAX],int n)
   {int i;
for(i=0;i<n;i++)
	{cout<<"ingresar el elemento: ";
	 cin>>vec[i];
	}
	cout<<"el vector es : "<<vec[i];
     }


Void cargar_matriz(int M[10][10],intn,int m)
   {inti,j;
     for(i=0;i<n;i++)
    {for(j=0;j<m;j++)
     {cout<<"ingresar los elementos: ";
      cin>>M[i][j];
     }
    }
   }

void cargar_matrizdematriz(Matriz M[10][10],int n)
{inti,j,k,l;
for(i=0;i<n;i++)
   {for(j=0;j<n;j++)
    {for(k=0;k<n;k++)
{for(l=0;l<n;l++)
      {cout<<"Introducir Valor: ";
cin>>M[i][j].mat[k][l];
}
     }
    }
   }
  }

void ordenar_fila_matriz(Matriz M[10][10],int n)
{inti,j,k,l,x,aux=0;
for(i=0;i<n;i++)
   {for(j=0;j<n;j++)
    {for(k=0;k<n;k++)
     {for(l=0;l<n-1;l++)
      {for(x=l+1;x<n;x++)
       {if(M[i][j].mat[k][l]>M[i][j].mat[k][x])
        {aux=M[i][j].mat[k][l]; 
         M[i][j].mat[k][l]=M[i][j].mat[k][x];
		 M[i][j].mat[k][x]=aux;
        }
       }
      }
     }
    }
   } 
  }

