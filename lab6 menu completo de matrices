#include<iostream>
#include<conio.h>
#include<string.h>
#include<math.h>
usingnamespacestd;
#define N 50;
#define M 50;

voidcargar(int A[N][M], intn,int m){
	inti,j;
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			cout<<"Elemento para MAT["<<i<<"]["<<j<<"]: ";
			cin>>A[i][j];
		}
	}
}

voidmostrar(int A[N][M],int n1, int m1){
	inti,j;
	for(i=0;i<n;i++){
		for(j=0;j<m;j++){
			cout<<A[i][j];
		}
		cout<<endl;
	}
}

voidsumarMatrices (int A [N][M], int B [N][M], int n, int m, int C[N][M]){
	inti,j;
	for(i=0; i<n; i++){
		for(j=0; j<m ; j++){
			C[i][j]= A[i][j]+B[i][j];
		}
	}
}

voidrestaMatrices (int A[N][M], int B[N][M], int n, int m, int c[N][M]){
	inti,j;
	for (i=0; i<n; i++){
		for (j=0; j<m; j++){
			c[i][j]=A[i][j]-B[i][j];
		}
	}
}


voidmultiplicarMatrices(int A[N][M], int n1,int m1, int B[N][M],int n2, int m2, int C[N][M], int&n3, int&m3){
	inti,j,k,acum=0;
	for(i=0; i<n; i++){
		for(j=o; j<m ; j++){
			acum=0;
			for (k=0; k<m1 ;k++){
				acum=acum + (A[i][j]*B[i][j]);
			}
			C[i][j]=acum;
		}
	}

		n3=n1;
		m3=m2;
}

voidtransponer (int A[N][M], int n, int m){
	inti,j, aux;
	for(i=0; i<n-1; i++){
		for(j=i+1; j<m; j++){
			aux= A[i][j];
			A=[i][j]=A[j][i];
			A=[j][i]= A[i][j];
		}
	}
}


int main(){
	int n1,m1,n2,m2,mat1[N][M],mat2[N][M],c[N][M],n3=0,m3=0;
int opcion;
cout<<"Nro de filas para Matriz A";
	cin>>n1;
cout<<endl<<"Nro de columnas para Matriz A";
	cin>>m1;
cout<<endl<<"Nro de filas para Matriz B";
	cin>>n2;
cout<<endlMM"Nro de columnas para Matriz B";
	cin>>m2;
	do{
		cout<<endl<<"* * * * * M E N U * * * * *";
		cout<<endl<<endl<<"1.- Cargar matrices.";
		cout<<endl<<"2.-Mostrar matrices.";
		cout<<endl<<"3.-Suma de matrices";
		cout<<endl<<"4.-Resta de matrices.";
		cout<<endl<<"5.-Multiplicacion de matrices";
		cout<<endl<<"6.-Transposicion de matrices";
		cout<<endl<<"0.-Salir";
		cout<<endl<<endl<<"Elija su opcion";
		cin>>opcion;
		switch(opcion){
		case 1: cargar(mat1,n1,m1);
			cargar(mat2,n2,m2);
			break;
		case 2: mostrar(mat1,n1,m1);
			break;
		case 3: if(n1==n2 && m1==m2){
		sumarMatrices(mat1,mat2);
	}else{
		cout<<"No se puede sumar";
	}
				break;
		case 4:  if(n1==n2 && m1==m2){
		restaMatrices(mat1,mat2);
	}else{
		cout<<"No se puederestar";
	}
				break;
		case 5:	if(m1==n2){
	multiplicarMatrices(mat1,n1,m1,mat2,n2,m2,c,n3,m3);
}
else{
	cout<<"No se pude multiplicar";
}
break;
		case 6: transponer(mat1,n1,n2);
			break;
		}
	}while(opcion!=0);
	getch();
	return(1);
}


